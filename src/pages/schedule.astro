---
import Layout from "../layouts/Layout.astro";
import { format, parse } from "date-fns";

import { FrappeApp } from "frappe-js-sdk";

const frappe = new FrappeApp("https://cms.buildwithhussain.dev", {
  useToken: true,
  // Pass a custom function that returns the token as a string - this could be fetched from LocalStorage or auth providers like Firebase, Auth0 etc.
  token: () => getToken(),
  // This can be "Bearer" or "token"
  type: "token",
});

function getToken() {
  return `${import.meta.env.API_KEY}:${import.meta.env.API_SECRET}`;
}

const db = frappe.db();

let streams = await db.getDocList("BWH Stream", {
  fields: ["title", "stream_date", "stream_time", "stream_link"],
  orderBy: {
    field: "stream_date",
    order: "asc",
  },
  limit: 1000,
});

streams.forEach((stream) => {
  // stream.stream_date, format to form 24th May, 2023 without considering timezone
  stream.stream_date = format(
    parse(stream.stream_date, "yyyy-MM-dd", new Date()),
    "do MMM, yyyy"
  );

  stream.stream_time = format(
    parse(stream.stream_time, "HH:mm:ss", new Date()),
    "hh:mma"
  );
});

// remove streams that are in the past
streams = streams.filter((stream) => {
  const streamDate = parse(stream.stream_date, "do MMM, yyyy", new Date());
  const streamTime = parse(stream.stream_time, "hh:mma", new Date());

  const streamDateTime = new Date(
    streamDate.getFullYear(),
    streamDate.getMonth(),
    streamDate.getDate(),
    streamTime.getHours(),
    streamTime.getMinutes(),
    streamTime.getSeconds()
  );

  stream.stream_date_time = streamDateTime;

  return streamDateTime > new Date();
});
---

<Layout title="Schedule">
  <!-- Hero section -->
  <section
    class="bg-white px-9 sm:px-24 pb-5 pt-20 sm:pt-32 sm:flex sm:flex-row-reverse sm:justify-between sm:items-center"
  >
    <img src="./logo.png" alt="hero" class="w-28 h-28 mb-20 sm:mb-0" />

    <div class="space-y-1">
      <h2 class="text-xl sm:text-3xl font-semibold text-green-600">Build With Hussain</h2>
      <h1 class="text-green-900 font-semibold text-4xl sm:font-medium sm:text-5xl">
        Let's Build. Let's Learn.
      </h1>
    </div>
  </section>

  <!-- Registration Section -->
  <section class="px-9 sm:px-24 my-36">
    <form id="registeration-form">
      <h3 class="font-semibold text-base mb-4">
        New Episodes Every Wednesday.
      </h3>
      <div class="flex flex-col space-y-4">
        <input
          class="focus:ring-2 focus:outline-none focus:ring-gray-500 text-gray-500 font-semibold text-lg py-6 pl-4 rounded-lg border-[3px] border-gray-400"
          required
          name="first_name"
          type="text"
          placeholder="First Name"
        />
        <input
          class="focus:ring-2 focus:outline-none focus:ring-gray-500 text-gray-500 font-semibold text-lg py-6 pl-4 rounded-lg border-[3px] border-gray-400"
          required
          name="email"
          type="email"
          placeholder="Your Email"
        />
      </div>

      <button
        type="submit"
        class="group flex flex-row items-center justify-center space-x-8 focus:outline-none focus:ring-4 focus:ring-green-800 mt-10 bg-green-900 text-green-100 px-[70px] py-4 rounded-full font-bold text-xl transition-colors w-full"
        type="submit"
      >
        <span>Stay Notified</span>
        <i
          class="ph-bold ph-arrow-right group-hover:translate-x-2 transition-transform text-green-100"
        ></i>
      </button>
    </form>
  </section>

  <main class="px-9 sm:px-24 my-36">
    <h2 class="uppercase text-green-500/70 font-black text-2xl mb-3">
      Schedule
    </h2>

    <ul class="divide-y-2 divide-green-900/10">
      {
        streams.map((stream) => (
          <li class="font-bold text-lg space-y-1 py-10">
            <a class="group" target="_blank" href={stream.stream_link}>
              <div class="flex flex-row items-center justify-between">
                <h3 class="text-gray-900">{stream.title}</h3>
                <i class="ph-bold ph-arrow-right group-hover:translate-x-2 transition-transform text-green-900" />
              </div>
              <div>
                <time class="text-gray-500" datetime={stream.stream_date_time}>
                  <span>{stream.stream_date}</span>
                  <span class="font-thin">|</span>
                  <span>{stream.stream_time} IST</span>
                </time>
              </div>
            </a>
          </li>
        ))
      }
    </ul>
  </main>

  <footer class="px-9 sm:px-24 flex items-center justify-center mb-10">
    <span class="text-7xl">✌🏼</span>
  </footer>

  <script>
    function handleOnRegister(e) {
      // get form data
      const formData = new FormData(e.target);

      // extract form data and store in data key of form data
      const data = Object.fromEntries(formData.entries());

      formData.set("data", JSON.stringify(data));
      formData.set("web_form", "test");
      formData.set("cmd", "frappe.website.doctype.web_form.web_form.accept");
      formData.set("for_payment", "false");

      // remove email and first_name from form data
      formData.delete("email");
      formData.delete("first_name");

      // make a post request to cms.buildwithhussain.dev with the form data and cors enabled
      fetch("https://cms.buildwithhussain.dev/", {
        method: "POST",
        body: formData,
        mode: "cors",
      })
        .then((res) => {
          if (res.status === 200) {
            // clear the form
            e.target.reset();
            alert("You have been registered successfully.");
          } else {
            alert("Something went wrong. Please try again later.");
          }
        })
        .catch((err) => {
          alert("Something went wrong. Please try again later.");
          console.log(err);
        });
      e.preventDefault();
    }

    // get element and attach event listener
    const form = document.getElementById("registeration-form");
    form.addEventListener("submit", handleOnRegister);
  </script>
</Layout>
